[
  {
    "objectID": "04-spatial-data-viz.html",
    "href": "04-spatial-data-viz.html",
    "title": "Visualization of Spatial Data",
    "section": "",
    "text": "Quick recap of plot()\nPretty (and useful) maps with ggplot2\nInteractive maps with mapview/leaflet"
  },
  {
    "objectID": "04-spatial-data-viz.html#outline",
    "href": "04-spatial-data-viz.html#outline",
    "title": "Visualization of Spatial Data",
    "section": "",
    "text": "Quick recap of plot()\nPretty (and useful) maps with ggplot2\nInteractive maps with mapview/leaflet"
  },
  {
    "objectID": "02-intro-spatial-data.html#outline",
    "href": "02-intro-spatial-data.html#outline",
    "title": "Introduction to Spatial Data with R",
    "section": "Outline",
    "text": "Outline\n\nIntroduction to Simple Features and the sf package\nCoordinate Reference Systems\nReading various spatial data formats into R\nBasic operations with spatial data"
  },
  {
    "objectID": "02-intro-spatial-data.html#learning-objectives",
    "href": "02-intro-spatial-data.html#learning-objectives",
    "title": "Introduction to Spatial Data with R",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nThe “simple features” representation of vector data\nUse and understand sf objects in R\nBasic understanding of Coordinate Reference Systems (CRS)\nUse mapview and sf to preview spatial data\nHow to do basic operations with spatial data using sf"
  },
  {
    "objectID": "02-intro-spatial-data.html#vector-simple-features",
    "href": "02-intro-spatial-data.html#vector-simple-features",
    "title": "Introduction to Spatial Data with R",
    "section": "Vector: Simple Features",
    "text": "Vector: Simple Features\n\n\nThe sf R package1\nReplaces\n\nsp\nrgdal\nrgeos\n\n\n2\n\n\n\n\nSimple Features is a standard specification (Open Geospatial Consortium) - agreed-upon way to represent vector spatial data\nrepresent all common vector geometry types : points, lines, polygons and their respective ‘multi’ versions\nsupports geometry collections, which can contain multiple geometry types in a single object.\nsf supersedes the sp ecosystem, which comprises sp , rgdal for data read/write and rgeos for spatial operations.\nrgdal and rgeos are now retired and removed from CRAN\n\n\nsf package: https://cran.r-project.org/package=sfGeocomputation with R, fig 2.2: https://geocompr.robinlovelace.net"
  },
  {
    "objectID": "02-intro-spatial-data.html#reading-previewing-spatial-data",
    "href": "02-intro-spatial-data.html#reading-previewing-spatial-data",
    "title": "Introduction to Spatial Data with R",
    "section": "Reading & previewing spatial data",
    "text": "Reading & previewing spatial data\n\n\n\nlibrary(sf)\nlibrary(mapview)\n\nairports &lt;- read_sf(\n  \"raw_data/bc_airports.gpkg\"\n)\n\nmapview(airports)"
  },
  {
    "objectID": "02-intro-spatial-data.html#mapview",
    "href": "02-intro-spatial-data.html#mapview",
    "title": "Introduction to Spatial Data with R",
    "section": "mapview",
    "text": "mapview\n\nmapview(airports, zcol = \"NUMBER_OF_RUNWAYS\")"
  },
  {
    "objectID": "02-intro-spatial-data.html#structure-of-an-sf-object",
    "href": "02-intro-spatial-data.html#structure-of-an-sf-object",
    "title": "Introduction to Spatial Data with R",
    "section": "Structure of an sf object",
    "text": "Structure of an sf object\n\nairports\n\nSimple feature collection with 455 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 406543.7 ymin: 367957.6 xmax: 1796645 ymax: 1689146\nProjected CRS: NAD83 / BC Albers\n# A tibble: 455 × 6\n   AIRPORT_NAME                   IATA_CODE LOCALITY ELEVATION NUMBER_OF_RUNWAYS\n   &lt;chr&gt;                          &lt;chr&gt;     &lt;chr&gt;        &lt;dbl&gt;             &lt;int&gt;\n 1 Terrace (Northwest Regional) … &lt;NA&gt;      Terrace     217.                   2\n 2 Victoria Harbour (Camel Point… &lt;NA&gt;      Victoria      4.57                 0\n 3 Victoria Inner Harbour Airpor… YWH       Victoria      0                    0\n 4 Victoria Harbour (Shoal Point… &lt;NA&gt;      Victoria      3.05                 0\n 5 Victoria (Royal Jubilee Hospi… &lt;NA&gt;      Saanich      15.6                  0\n 6 Victoria (General Hospital) H… &lt;NA&gt;      View Ro…     15.8                  0\n 7 Victoria (BC Hydro) Heliport   &lt;NA&gt;      Saanich      12.2                  0\n 8 San Juan Point (Coast Guard) … &lt;NA&gt;      Port Re…      7.62                 0\n 9 Shawnigan Lake Water Aerodrome &lt;NA&gt;      Shawnig…      0                    0\n10 Victoria International Airport YYJ       North S…     19.5                  3\n# ℹ 445 more rows\n# ℹ 1 more variable: geom &lt;POINT [m]&gt;\n\n\n\ngo through sf header info: - size (# of features and # of columns/attributes) - geometry type - dimension (XY - can have Z and M) - bbox - CRS"
  },
  {
    "objectID": "02-intro-spatial-data.html#key-features-of-an-sf-object",
    "href": "02-intro-spatial-data.html#key-features-of-an-sf-object",
    "title": "Introduction to Spatial Data with R",
    "section": "Key features of an sf object",
    "text": "Key features of an sf object\n\n\n\nst_geometry(airports)\n\nGeometry set for 455 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 406543.7 ymin: 367957.6 xmax: 1796645 ymax: 1689146\nProjected CRS: NAD83 / BC Albers\nFirst 5 geometries:\n\n\nPOINT (833323.9 1054950)\n\n\nPOINT (1193727 381604.1)\n\n\nPOINT (1194902 382257.7)\n\n\nPOINT (1193719 382179.3)\n\n\nPOINT (1198292 383563.6)\n\nst_bbox(airports)\n\n     xmin      ymin      xmax      ymax \n 406543.7  367957.6 1796645.0 1689145.9 \n\n\n\n\nst_crs(airports)\n\nCoordinate Reference System:\n  User input: NAD83 / BC Albers \n  wkt:\nPROJCRS[\"NAD83 / BC Albers\",\n    BASEGEOGCRS[\"NAD83\",\n        DATUM[\"North American Datum 1983\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4269]],\n    CONVERSION[\"British Columbia Albers\",\n        METHOD[\"Albers Equal Area\",\n            ID[\"EPSG\",9822]],\n        PARAMETER[\"Latitude of false origin\",45,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8821]],\n        PARAMETER[\"Longitude of false origin\",-126,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8822]],\n        PARAMETER[\"Latitude of 1st standard parallel\",50,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8823]],\n        PARAMETER[\"Latitude of 2nd standard parallel\",58.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8824]],\n        PARAMETER[\"Easting at false origin\",1000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8826]],\n        PARAMETER[\"Northing at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8827]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Province-wide spatial data management.\"],\n        AREA[\"Canada - British Columbia.\"],\n        BBOX[48.25,-139.04,60.01,-114.08]],\n    ID[\"EPSG\",3005]]"
  },
  {
    "objectID": "02-intro-spatial-data.html#an-sf-object-is-a-data.frame",
    "href": "02-intro-spatial-data.html#an-sf-object-is-a-data.frame",
    "title": "Introduction to Spatial Data with R",
    "section": "An sf object is a data.frame",
    "text": "An sf object is a data.frame\n\nclass(airports)\n\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nis.data.frame(airports)\n\n[1] TRUE\n\nsummary(airports)\n\n AIRPORT_NAME        IATA_CODE           LOCALITY           ELEVATION     \n Length:455         Length:455         Length:455         Min.   :   0.0  \n Class :character   Class :character   Class :character   1st Qu.:   0.0  \n Mode  :character   Mode  :character   Mode  :character   Median :   6.4  \n                                                          Mean   : 194.4  \n                                                          3rd Qu.: 307.1  \n                                                          Max.   :1277.4  \n NUMBER_OF_RUNWAYS            geom    \n Min.   :0.0000    POINT        :455  \n 1st Qu.:0.0000    epsg:3005    :  0  \n Median :0.0000    +proj=aea ...:  0  \n Mean   :0.3385                       \n 3rd Qu.:1.0000                       \n Max.   :3.0000"
  },
  {
    "objectID": "02-intro-spatial-data.html#coordinate-reference-systems",
    "href": "02-intro-spatial-data.html#coordinate-reference-systems",
    "title": "Introduction to Spatial Data with R",
    "section": "Coordinate Reference Systems",
    "text": "Coordinate Reference Systems\n\n\nGeographic\n\nspherical or ellipsoidal surface\nellipsoid defined by the datum\nlat/long, measured in angular distances (degrees/radians)\n\n\n\n\n\n\n\nProjected\n\nCartesian coordinates on a flat plane\norigin, x and y axes, linear unit of measurement (e.g., m)\n\n\n\n\n\ndefines how the spatial elements of the data relate to the surface of the Earth\nGeographic: - identify any location on the Earth’s surface using two values — longitude and latitude. - Longitude is location in the East-West direction in angular distance from the Prime Meridian plane. - Latitude is angular distance North or South of the equatorial plane. - Distances in geographic CRSs are therefore not measured in meters. This has important consequences\nProjected: - based on a geographic CRS - rely on map projections to convert the three-dimensional surface of the Earth into Easting and Northing (x and y) values in a projected CRS - often named based on a property they preserve: equal-area preserves area, azimuthal preserve direction, equidistant preserve distance, and conformal preserve local shape. - conic, cylindrical, planar"
  },
  {
    "objectID": "02-intro-spatial-data.html#crss-in-r-epsg-codes",
    "href": "02-intro-spatial-data.html#crss-in-r-epsg-codes",
    "title": "Introduction to Spatial Data with R",
    "section": "CRSs in R: EPSG codes",
    "text": "CRSs in R: EPSG codes\n\nst_crs(airports)$input\n\n[1] \"NAD83 / BC Albers\"\n\n\n\n\n\nBC Albers - B.C.’s standard projection\n\nEqual Area conic\nCentre: c(-126, 54)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhttps://epsg.io/3005\n\n\nEPSG codes BC Albers"
  },
  {
    "objectID": "02-intro-spatial-data.html#wkt-well-known-text",
    "href": "02-intro-spatial-data.html#wkt-well-known-text",
    "title": "Introduction to Spatial Data with R",
    "section": "WKT (Well-Known Text)",
    "text": "WKT (Well-Known Text)\n\nst_crs(3005)\n\nCoordinate Reference System:\n  User input: EPSG:3005 \n  wkt:\nPROJCRS[\"NAD83 / BC Albers\",\n    BASEGEOGCRS[\"NAD83\",\n        DATUM[\"North American Datum 1983\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4269]],\n    CONVERSION[\"British Columbia Albers\",\n        METHOD[\"Albers Equal Area\",\n            ID[\"EPSG\",9822]],\n        PARAMETER[\"Latitude of false origin\",45,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8821]],\n        PARAMETER[\"Longitude of false origin\",-126,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8822]],\n        PARAMETER[\"Latitude of 1st standard parallel\",50,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8823]],\n        PARAMETER[\"Latitude of 2nd standard parallel\",58.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8824]],\n        PARAMETER[\"Easting at false origin\",1000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8826]],\n        PARAMETER[\"Northing at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8827]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Province-wide spatial data management.\"],\n        AREA[\"Canada - British Columbia.\"],\n        BBOX[48.25,-139.04,60.01,-114.08]],\n    ID[\"EPSG\",3005]]"
  },
  {
    "objectID": "02-intro-spatial-data.html#your-turn",
    "href": "02-intro-spatial-data.html#your-turn",
    "title": "Introduction to Spatial Data with R",
    "section": "Your turn",
    "text": "Your turn\n\nRead in the electoral districts data in the data folder:\n\nWhat type of geometry is it?\nWhat is the CRS?\nWhat is the EPSG code?"
  },
  {
    "objectID": "02-intro-spatial-data.html#solution",
    "href": "02-intro-spatial-data.html#solution",
    "title": "Introduction to Spatial Data with R",
    "section": "Solution",
    "text": "Solution\n\nelec_bc &lt;- read_sf(\"raw_data/bc_electoral_districts.shp\")\nst_geometry_type(elec_bc, by_geometry = FALSE)\n\n[1] POLYGON\n18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE\n\nst_crs(elec_bc)\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\nhttps://epsg.io/4326"
  },
  {
    "objectID": "02-intro-spatial-data.html#basic-plotting",
    "href": "02-intro-spatial-data.html#basic-plotting",
    "title": "Introduction to Spatial Data with R",
    "section": "Basic plotting",
    "text": "Basic plotting\n\nplot(elec_bc)"
  },
  {
    "objectID": "02-intro-spatial-data.html#basic-plotting-1",
    "href": "02-intro-spatial-data.html#basic-plotting-1",
    "title": "Introduction to Spatial Data with R",
    "section": "Basic plotting",
    "text": "Basic plotting\n\n\nJust the shapes\n\nplot(st_geometry(elec_bc))\n\n\n\n\n\n\n\n\n\nA single column\n\nplot(elec_bc[\"ED_NAME\"])\n\n\n\n\n\n\n\n\n\n\n\n\nNotice strange orientation of BC - north is greatly exaggerated\nbecause in WGS84 (lat/long)\nglobal CRS centred at lon 0 (Greenwich) and lat 0 (equator)\ngood for web mapping, not good for BC"
  },
  {
    "objectID": "02-intro-spatial-data.html#transforming-coordinate-systems",
    "href": "02-intro-spatial-data.html#transforming-coordinate-systems",
    "title": "Introduction to Spatial Data with R",
    "section": "Transforming coordinate systems",
    "text": "Transforming coordinate systems\n\nelec_bc_albers &lt;- st_transform(elec_bc, 3005)\n\nOr, if you have another object in the CRS you want to use:\n\nelec_bc_albers &lt;- st_transform(elec_bc, st_crs(airports))\nst_crs(elec_bc_albers)\n\nCoordinate Reference System:\n  User input: NAD83 / BC Albers \n  wkt:\nPROJCRS[\"NAD83 / BC Albers\",\n    BASEGEOGCRS[\"NAD83\",\n        DATUM[\"North American Datum 1983\",\n            ELLIPSOID[\"GRS 1980\",6378137,298.257222101,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4269]],\n    CONVERSION[\"British Columbia Albers\",\n        METHOD[\"Albers Equal Area\",\n            ID[\"EPSG\",9822]],\n        PARAMETER[\"Latitude of false origin\",45,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8821]],\n        PARAMETER[\"Longitude of false origin\",-126,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8822]],\n        PARAMETER[\"Latitude of 1st standard parallel\",50,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8823]],\n        PARAMETER[\"Latitude of 2nd standard parallel\",58.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8824]],\n        PARAMETER[\"Easting at false origin\",1000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8826]],\n        PARAMETER[\"Northing at false origin\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8827]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Province-wide spatial data management.\"],\n        AREA[\"Canada - British Columbia.\"],\n        BBOX[48.25,-139.04,60.01,-114.08]],\n    ID[\"EPSG\",3005]]"
  },
  {
    "objectID": "02-intro-spatial-data.html#your-turn-1",
    "href": "02-intro-spatial-data.html#your-turn-1",
    "title": "Introduction to Spatial Data with R",
    "section": "Your turn",
    "text": "Your turn\nLoad \"raw_data/ski_resorts.csv\" as an sf object\n\n\n\n\n\nfacility_name\nlocality\nlatitude\nlongitude\nelevation\n\n\n\n\nWapiti Ski Club\nElkford\n50.02168\n-114.9380\n1467\n\n\nSummit Lake Ski Area\nNakusp\n50.14546\n-117.6144\n1132\n\n\nSasquatch Mountain Resort\nHemlock Valley\n49.38011\n-121.9354\n1185\n\n\nApex Mountain Resort\nApex\n49.39042\n-119.9047\n1852\n\n\nSalmo Ski Hill\nSalmo\n49.18640\n-117.3015\n864\n\n\nRed Mountain Resort\nRossland\n49.10238\n-117.8194\n1150"
  },
  {
    "objectID": "02-intro-spatial-data.html#hints",
    "href": "02-intro-spatial-data.html#hints",
    "title": "Introduction to Spatial Data with R",
    "section": "Hints:",
    "text": "Hints:\nLoad \"raw_data/ski_resorts.csv\" as an sf object\n\nski_resorts &lt;- read.csv(\"raw_data/ski_resorts.csv\")\nski_resorts &lt;- st_as_sf(ski_resorts, ...)"
  },
  {
    "objectID": "02-intro-spatial-data.html#solution-1",
    "href": "02-intro-spatial-data.html#solution-1",
    "title": "Introduction to Spatial Data with R",
    "section": "Solution",
    "text": "Solution\n\nski_resorts &lt;- read.csv(\"raw_data/ski_resorts.csv\")\n\nski_resorts &lt;- st_as_sf(ski_resorts,\n                        coords = c(\"longitude\", \"latitude\"),\n                        crs = 4326)\n\nhead(ski_resorts)\n\nSimple feature collection with 6 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -121.9354 ymin: 49.10238 xmax: -114.938 ymax: 50.14546\nGeodetic CRS:  WGS 84\n              facility_name       locality elevation                   geometry\n1           Wapiti Ski Club        Elkford      1467  POINT (-114.938 50.02168)\n2      Summit Lake Ski Area         Nakusp      1132 POINT (-117.6144 50.14546)\n3 Sasquatch Mountain Resort Hemlock Valley      1185 POINT (-121.9354 49.38011)\n4      Apex Mountain Resort           Apex      1852 POINT (-119.9047 49.39042)\n5            Salmo Ski Hill          Salmo       864  POINT (-117.3015 49.1864)\n6       Red Mountain Resort       Rossland      1150 POINT (-117.8194 49.10238)"
  },
  {
    "objectID": "02-intro-spatial-data.html#geometric-calculations",
    "href": "02-intro-spatial-data.html#geometric-calculations",
    "title": "Introduction to Spatial Data with R",
    "section": "Geometric calculations",
    "text": "Geometric calculations\n\n\nGeometric Measurements\n\nst_area()\nst_length()\nst_distance()\n\n\nGeometric Operations\n\nst_union()\nst_intersection()\nst_difference()\nst_sym_difference()"
  },
  {
    "objectID": "02-intro-spatial-data.html#geometry-predicates",
    "href": "02-intro-spatial-data.html#geometry-predicates",
    "title": "Introduction to Spatial Data with R",
    "section": "Geometry Predicates",
    "text": "Geometry Predicates\n\nUse with st_filter() or st_join()\n\n\n\n\nst_intersects(): touch or overlap\nst_disjoint(): !intersects\nst_touches(): touch\nst_crosses(): cross (don’t touch)\nst_within(): within\n\n\n\nst_contains(): contains\nst_overlaps(): overlaps\nst_covers(): cover\nst_covered_by(): covered by\nst_equals(): equals"
  },
  {
    "objectID": "02-intro-spatial-data.html#manipulating-geometries",
    "href": "02-intro-spatial-data.html#manipulating-geometries",
    "title": "Introduction to Spatial Data with R",
    "section": "Manipulating Geometries",
    "text": "Manipulating Geometries\n\n\n\nst_line_merge()\nst_segmentize()\nst_voronoi()\nst_centroid()\nst_convex_hull()\nst_triangulate()\n\n\n\nst_polygonize()\nst_split()\nst_buffer()\nst_make_valid()\nst_boundary()\n…"
  },
  {
    "objectID": "02-intro-spatial-data.html#your-turn-2",
    "href": "02-intro-spatial-data.html#your-turn-2",
    "title": "Introduction to Spatial Data with R",
    "section": "Your turn",
    "text": "Your turn\n\nCalculate the area of each electoral district\nCreate an sf object of only airports within the Nelson-Creston electoral district.\nPlot the ski resorts as circles, where the size of the circle is related to the elevation of the resort.\n\n\nst_area(elec_bc_albers)\nst_filter(airports, elec_bc_albers[elec_bc_albers$ED_NAME == “Nelson-Creston”, ])\nmapview(st_buffer(ski_resorts, dist = ski_resorts$elevation*10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWorkshop Home"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R Telemetry Workshop, November 2023",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2\n\n\nFor setup instructions go to setup instructions."
  },
  {
    "objectID": "00-intro-setup.html",
    "href": "00-intro-setup.html",
    "title": "Introduction and System Setup",
    "section": "",
    "text": "This two-day course will introduce you to the basics of working with telemetry data in R.\n\n\n\nThe basics of spatial data in R\nHow to read in, clean, and QA your telemetry data\nHow to create useful summaries of your data\nData visualization techniques for spatial and telemetry data (graphs and maps)\nHow to use the bcmaps and bcdata packages to get vector and raster data from official BC government sources.\nHow to perform spatial operations to model covariates\n\n\n\n\n\nMethodological detail of telemetry methods ie DOP calculations\nAdvanced modeling techniques\nWe wont be working with individual datasets (until Friday!)"
  },
  {
    "objectID": "00-intro-setup.html#workshop-overview",
    "href": "00-intro-setup.html#workshop-overview",
    "title": "Introduction and System Setup",
    "section": "",
    "text": "This two-day course will introduce you to the basics of working with telemetry data in R.\n\n\n\nThe basics of spatial data in R\nHow to read in, clean, and QA your telemetry data\nHow to create useful summaries of your data\nData visualization techniques for spatial and telemetry data (graphs and maps)\nHow to use the bcmaps and bcdata packages to get vector and raster data from official BC government sources.\nHow to perform spatial operations to model covariates\n\n\n\n\n\nMethodological detail of telemetry methods ie DOP calculations\nAdvanced modeling techniques\nWe wont be working with individual datasets (until Friday!)"
  },
  {
    "objectID": "00-intro-setup.html#computing-requirements",
    "href": "00-intro-setup.html#computing-requirements",
    "title": "Introduction and System Setup",
    "section": "Computing requirements",
    "text": "Computing requirements\nYou will require the following software installed and configured for the workshop. Please have this set up and ready to go before we start.\nYou will need:\n\nA laptop computer, preferably with administrative privileges\nR and RStudio\nSeveral R packages\nQGIS (optional)\n\n\nInstall R and RStudio\nYou will need:\n\nR version &gt;= 4.2.0\nRStudio &gt;= 2023.03.1\n\n\nInstall R\nDownload and install R for your operating system from https://cloud.r-project.org/.\n\nWindows with no admin rights:\nIf you do not have administrator rights, the installer will default to installing somewhere in your user folder (e.g., C:/Users/username/AppData/Local/Programs/). If you prefer, you can change the location to another folder that you have write access to, just make sure it is on your C:/ drive.\n\n\n\nInstall R Studio\nDownload and install RStudio Desktop from https://posit.co/download/rstudio-desktop/. This page should automatically offer you the version suitable for your operating system, but you can scroll down to find versions for all operating systems.\n\nWindows with no admin rights:\nDownload the .zip archive for Windows under “Zip/Tarballs”. Create a folder called RStudio in a location on your C:/ drive, where you have write access (e.g. C:/Users/username/AppData/Local/Programs/RStudio), and extract the zip file into this folder. Find the RStudio program in this folder: it is named rstudio.exe, but the file extension will typically be hidden, so look for rstudio. Right-click this file to create a shortcut and drag it to your desktop/task bar. Use the shortcut to open RStudio.\n\n\n\n\nInstall packages\nIn R, install the necessary packages by running:\n\ninstall.packages(\n  c(\"tidyverse\", \"sf\", \"terra\", \"tmap\", \"mapview\", \"bcdata\", \"bcmaps\", \"readxl\")\n)\n\n\n\nQGIS\nQGIS is a free and open-source geographic information system (GIS) that allows you to create, edit, visualize, analyze and publish geospatial information.\nDownload and install from the QGIS website."
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "MIT License",
    "section": "",
    "text": "MIT License\nCopyright (c) 2023 r-telemetry-workshop-nov-2023 authors\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "03-intro-telemetry-data.html",
    "href": "03-intro-telemetry-data.html",
    "title": "Introduction to Telemetry Data",
    "section": "",
    "text": "In this course we will be using Telemetry data from Mountain Caribou (Rangifer terendus) herds in the Peace region of British Columbia. While the full dataset and metadata can be found on movebank, we will be working on a modified subset throughout this course. TEST\n\n\nOur first step is to see what our data looks like. In this course we will be providing two csv files (Mountain caribou in British Columbia-reference-data.csv and Mountain caribou.csv).\n\n# Read in our data files.\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(ggplot2)\n\nref_raw &lt;- read.csv(\"raw_data/Mountain caribou in British Columbia-reference-data.csv\")\n\nloc_raw &lt;- read_excel(\"raw_data/Mountain caribou.xlsx\")\n\nLets take a look….\n\nhead(ref_raw)\n\n   tag.id  animal.id      animal.taxon deploy.on.date deploy.off.date\n1  151.51 HR_151.510 Rangifer tarandus                               \n2    C04a     GR_C04 Rangifer tarandus                        59:00.0\n3     C03     GR_C03 Rangifer tarandus                               \n4 151.805 HR_151.805 Rangifer tarandus                               \n5  151.76 HR_151.760 Rangifer tarandus                               \n6  151.72 HR_151.720 Rangifer tarandus                               \n  animal.death.comments animal.life.stage animal.reproductive.condition\n1                                                                      \n2                                                                      \n3                                                                      \n4                                                                      \n5                                                                      \n6                                                                      \n  animal.sex animal.taxon.detail attachment.type deploy.off.latitude\n1          f             caribou          collar                  NA\n2          f             caribou          collar                  NA\n3          f             caribou          collar                  NA\n4          f             caribou          collar                  NA\n5          f             caribou          collar                  NA\n6          f             caribou          collar                  NA\n  deploy.off.longitude deploy.on.latitude deploy.on.longitude deploy.on.person\n1                   NA                 NA                  NA                 \n2                   NA                 NA                  NA                 \n3                   NA                 NA                  NA                 \n4                   NA                 NA                  NA                 \n5                   NA                 NA                  NA                 \n6                   NA                 NA                  NA                 \n  deployment.comments deployment.end.comments deployment.end.type\n1                                                         unknown\n2                                                         unknown\n3                                                         unknown\n4                                                         unknown\n5                                                         unknown\n6                                                         unknown\n    deployment.id manipulation.type  study.site tag.beacon.frequency\n1 151.510_151.510              none Hart Ranges              151.510\n2        C04_C04a              none      Graham                   NA\n3         C03_C03              none      Graham                   NA\n4 151.805_151.805              none Hart Ranges              151.805\n5 151.760_151.760              none Hart Ranges              151.760\n6 151.720_151.720              none Hart Ranges              151.720\n  tag.manufacturer.name tag.model tag.serial.no\n1                                              \n2                                              \n3                                              \n4                                              \n5                                              \n6                                              \n\nnames(ref_raw)\n\n [1] \"tag.id\"                        \"animal.id\"                    \n [3] \"animal.taxon\"                  \"deploy.on.date\"               \n [5] \"deploy.off.date\"               \"animal.death.comments\"        \n [7] \"animal.life.stage\"             \"animal.reproductive.condition\"\n [9] \"animal.sex\"                    \"animal.taxon.detail\"          \n[11] \"attachment.type\"               \"deploy.off.latitude\"          \n[13] \"deploy.off.longitude\"          \"deploy.on.latitude\"           \n[15] \"deploy.on.longitude\"           \"deploy.on.person\"             \n[17] \"deployment.comments\"           \"deployment.end.comments\"      \n[19] \"deployment.end.type\"           \"deployment.id\"                \n[21] \"manipulation.type\"             \"study.site\"                   \n[23] \"tag.beacon.frequency\"          \"tag.manufacturer.name\"        \n[25] \"tag.model\"                     \"tag.serial.no\"                \n\nref_short &lt;- ref_raw %&gt;%\n  dplyr::select(\"tag.id\",\"animal.id\", \"deploy.on.date\", \"animal.sex\", \"animal.reproductive.condition\",\n                \"deployment.end.type\",\"tag.model\", \"tag.manufacturer.name\", \"tag.serial.no\"    )\n\n\nhead(loc_raw)\n\n# A tibble: 6 × 14\n    event.id timestamp location.long location.lat   DOP FixType     comments\n       &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n1 2270202009 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n2 2270202041 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n3 2270202100 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n4 2270202901 01:00.0           -123.         55.8     1 val. GPS-3D Scott   \n5 2270202132 01:00.0           -123.         55.9     1 val. GPS-3D Scott   \n6 2270202890 01:00.0           -123.         55.9     1 val. GPS-3D Scott   \n# ℹ 7 more variables: study.specific.measurement &lt;chr&gt;, sensor.type &lt;chr&gt;,\n#   individual.taxon.canonical.name &lt;chr&gt;, tag.local.identifier &lt;chr&gt;,\n#   individual.local.identifier &lt;chr&gt;, study.name &lt;chr&gt;, date &lt;chr&gt;\n\n\nWe can combine these two dataset and keep only the columns which are of interest\n\nall_data &lt;- left_join(loc_raw, ref_raw, by = c('tag.local.identifier'= 'tag.id') )\n\nall_data &lt;- all_data %&gt;% \n  dplyr::select(event.id, location.long, location.lat, DOP, FixType, comments ,\n                study.specific.measurement , sensor.type, tag.local.identifier, date, animal.id,\n                animal.sex, animal.reproductive.condition, tag.manufacturer.name, tag.model )\n\n#head(all_data)\n\n\n\n\n\n\nNow we have a single data set we can QA the data and provide more useful columns for further analysis.\n\nhead(all_data)\n\n# A tibble: 6 × 15\n    event.id location.long location.lat   DOP FixType     comments\n       &lt;dbl&gt;         &lt;dbl&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n1 2270202009         -124.         55.9     1 val. GPS-3D Scott   \n2 2270202041         -124.         55.9     1 val. GPS-3D Scott   \n3 2270202100         -124.         55.9     1 val. GPS-3D Scott   \n4 2270202901         -123.         55.8     1 val. GPS-3D Scott   \n5 2270202132         -123.         55.9     1 val. GPS-3D Scott   \n6 2270202890         -123.         55.9     1 val. GPS-3D Scott   \n# ℹ 9 more variables: study.specific.measurement &lt;chr&gt;, sensor.type &lt;chr&gt;,\n#   tag.local.identifier &lt;chr&gt;, date &lt;chr&gt;, animal.id &lt;chr&gt;, animal.sex &lt;chr&gt;,\n#   animal.reproductive.condition &lt;chr&gt;, tag.manufacturer.name &lt;chr&gt;,\n#   tag.model &lt;chr&gt;\n\n# check if there are NA's in the data \n\napply(all_data, 2, function(x) any(is.na(x)))\n\n                     event.id                 location.long \n                        FALSE                          TRUE \n                 location.lat                           DOP \n                         TRUE                         FALSE \n                      FixType                      comments \n                        FALSE                          TRUE \n   study.specific.measurement                   sensor.type \n                         TRUE                         FALSE \n         tag.local.identifier                          date \n                        FALSE                         FALSE \n                    animal.id                    animal.sex \n                        FALSE                         FALSE \nanimal.reproductive.condition         tag.manufacturer.name \n                        FALSE                         FALSE \n                    tag.model \n                        FALSE \n\n# Lets filter out any missing values \n\nlength(all_data$event.id)\n\n[1] 17197\n\ntdata &lt;- all_data %&gt;% \n  filter(!is.na(date)) %&gt;%\n  filter(!is.na(location.long)) %&gt;%\n  filter(!is.na(location.lat)) \n\n\n# comments \nunique(tdata$comments)\n\n[1] \"Scott\"      \"Burnt Pine\" NA          \n\n# two missing herd values which we can fill in (or delete)\n\ntdata &lt;- tdata %&gt;% \n  mutate(comments = case_when(\n    animal.id == \"BP_car043\" ~ \"Burnt Pine\", \n    animal.id == \"SC_car170\" ~ \"Scott\",\n    .default = comments\n  ))\n\n\n\n#length(tdata$event.id)\n\nNow lets covert the timestamp into a usable format\n\n# calculate time differences\ntdata &lt;- tdata  %&gt;%\n  mutate(date_time = ymd_hms(date)) \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `date_time = ymd_hms(date)`.\nCaused by warning:\n!  5 failed to parse.\n\n# owch we still have an error in this dataset\n\n# lets see if we can find it..... \n\nhead(sort(unique(tdata$date)))\n\n[1] \"2003-12-12 13:03:29.000\" \"2003-12-13 09:03:10.000\"\n[3] \"2003-12-14 05:03:11.000\" \"2003-12-15 01:03:10.000\"\n[5] \"2003-12-15 21:04:00.000\" \"2003-12-16 17:03:10.000\"\n\ntail(sort(unique(tdata$date)))\n\n[1] \"2016-03-16 10:01:00.000\" \"2016-03-16 17:49:00.000\"\n[3] \"2016-03-16 19:49:00.000\" \"2016-03-17 17:53:00.000\"\n[5] \"2016-03-17 19:53:00.000\" \"NA\"                     \n\ntdata &lt;- tdata  %&gt;% \n  filter(date != \"NA\")\n\ntdata  &lt;- tdata  %&gt;%\n  mutate(date_time = ymd_hms(date)) \n\nhead(tdata$date_time) \n\n[1] \"2013-09-23 10:01:00 UTC\" \"2013-10-09 10:01:00 UTC\"\n[3] \"2013-10-30 10:01:00 UTC\" \"2014-08-11 10:01:00 UTC\"\n[5] \"2013-11-10 02:01:00 UTC\" \"2014-08-07 10:01:00 UTC\"\n\n# Note the Universal Coordinated Time Zone\n\n\n# lets split this data format into something more useful \n\ntdata  &lt;- tdata  %&gt;%\n  mutate(year = year(date_time )) %&gt;%\n  mutate(month = month(date_time ),\n         day = day(date_time),\n         hour = hour(date_time),\n         minute = minute(date_time))\n\n\n\n\nNow we have fixed our data entry problems we also want to review the spatial accuracy. We have two metrics: DOP (Dilution of Precision), and a Fix Type.\n\n# review the lat / longs \n\nrange(tdata$location.lat)\n\n[1]  55.2249 155.4764\n\nhist(tdata$location.lat)\n\n\n\n# above 65 latidude\n\nrange(tdata$location.long)\n\n[1] -123.6684  -22.0000\n\nhist(tdata$location.long)\n\n\n\n# greater than -100 longitude. \n\ntdata &lt;- tdata %&gt;% \n  filter(location.long &lt;= -100) %&gt;%\n  filter(location.lat &lt;= 65)\n\n#bou &lt;- st_as_sf(tdata, coords = c(\"location.long\", \"location.lat\"), crs = 4326)\n#mapview::mapview (bou)\n\n# DOP \n\nrange (tdata$DOP)\n\n[1]  1.0 43.1\n\nhist(tdata$DOP)\n\n\n\n# for this example we only want to keep fixes with a DOP less than 10m\n\nfdata &lt;- tdata %&gt;% \n  filter(DOP &lt;= 10)\n\nhist(fdata$DOP)\n\n\n\n# Fix Type : \n\nfixtype &lt;- fdata %&gt;% \n  group_by(FixType) %&gt;%\n  summarise(count = n())\n\nfixtype\n\n# A tibble: 3 × 2\n  FixType     count\n  &lt;chr&gt;       &lt;int&gt;\n1 GPS-2D         92\n2 GPS-3D        291\n3 val. GPS-3D 16801\n\n# remove the 2d locations \n\nfdata &lt;- fdata %&gt;% \n  filter(FixType != \"GPS-2D\")\n\n# see what the data looks like\nglimpse(fdata)\n\nRows: 17,092\nColumns: 21\n$ event.id                      &lt;dbl&gt; 2270202009, 2270202041, 2270202100, 2270…\n$ location.long                 &lt;dbl&gt; -123.6036, -123.5987, -123.5903, -123.49…\n$ location.lat                  &lt;dbl&gt; 55.90000, 55.87343, 55.87470, 55.83741, …\n$ DOP                           &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ FixType                       &lt;chr&gt; \"val. GPS-3D\", \"val. GPS-3D\", \"val. GPS-…\n$ comments                      &lt;chr&gt; \"Scott\", \"Scott\", \"Scott\", \"Scott\", \"Sco…\n$ study.specific.measurement    &lt;chr&gt; \"Summer\", \"Summer\", \"Summer\", \"Summer\", …\n$ sensor.type                   &lt;chr&gt; \"gps\", \"gps\", \"gps\", \"gps\", \"gps\", \"gps\"…\n$ tag.local.identifier          &lt;chr&gt; \"car170\", \"car170\", \"car170\", \"car170\", …\n$ date                          &lt;chr&gt; \"2013-09-23 10:01:00.000\", \"2013-10-09 1…\n$ animal.id                     &lt;chr&gt; \"SC_car170\", \"SC_car170\", \"SC_car170\", \"…\n$ animal.sex                    &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", …\n$ animal.reproductive.condition &lt;chr&gt; \"with calf: N\", \"with calf: N\", \"with ca…\n$ tag.manufacturer.name         &lt;chr&gt; \"ATS\", \"ATS\", \"ATS\", \"ATS\", \"ATS\", \"ATS\"…\n$ tag.model                     &lt;chr&gt; \"GPS Iridium\", \"GPS Iridium\", \"GPS Iridi…\n$ date_time                     &lt;dttm&gt; 2013-09-23 10:01:00, 2013-10-09 10:01:0…\n$ year                          &lt;dbl&gt; 2013, 2013, 2013, 2014, 2013, 2014, 2014…\n$ month                         &lt;dbl&gt; 9, 10, 10, 8, 11, 8, 9, 12, 7, 11, 6, 12…\n$ day                           &lt;int&gt; 23, 9, 30, 11, 10, 7, 19, 6, 8, 24, 20, …\n$ hour                          &lt;int&gt; 10, 10, 10, 10, 2, 10, 2, 18, 18, 2, 2, …\n$ minute                        &lt;int&gt; 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 0, 0, 1…\n\n# lets check if this column is any use? \nunique(fdata$sensor.type)\n\n[1] \"gps\"\n\n# remove the columns that we dont need\nfdata &lt;- fdata %&gt;% \n  select(-FixType, -DOP, -date, -study.specific.measurement , -sensor.type, -event.id)"
  },
  {
    "objectID": "03-intro-telemetry-data.html#how-to-qa-and-summarise-your-telemetry-data",
    "href": "03-intro-telemetry-data.html#how-to-qa-and-summarise-your-telemetry-data",
    "title": "Introduction to Telemetry Data",
    "section": "",
    "text": "In this course we will be using Telemetry data from Mountain Caribou (Rangifer terendus) herds in the Peace region of British Columbia. While the full dataset and metadata can be found on movebank, we will be working on a modified subset throughout this course. TEST\n\n\nOur first step is to see what our data looks like. In this course we will be providing two csv files (Mountain caribou in British Columbia-reference-data.csv and Mountain caribou.csv).\n\n# Read in our data files.\n\nlibrary(sf)\n\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n\nlibrary(readxl)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(lubridate)\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nlibrary(ggplot2)\n\nref_raw &lt;- read.csv(\"raw_data/Mountain caribou in British Columbia-reference-data.csv\")\n\nloc_raw &lt;- read_excel(\"raw_data/Mountain caribou.xlsx\")\n\nLets take a look….\n\nhead(ref_raw)\n\n   tag.id  animal.id      animal.taxon deploy.on.date deploy.off.date\n1  151.51 HR_151.510 Rangifer tarandus                               \n2    C04a     GR_C04 Rangifer tarandus                        59:00.0\n3     C03     GR_C03 Rangifer tarandus                               \n4 151.805 HR_151.805 Rangifer tarandus                               \n5  151.76 HR_151.760 Rangifer tarandus                               \n6  151.72 HR_151.720 Rangifer tarandus                               \n  animal.death.comments animal.life.stage animal.reproductive.condition\n1                                                                      \n2                                                                      \n3                                                                      \n4                                                                      \n5                                                                      \n6                                                                      \n  animal.sex animal.taxon.detail attachment.type deploy.off.latitude\n1          f             caribou          collar                  NA\n2          f             caribou          collar                  NA\n3          f             caribou          collar                  NA\n4          f             caribou          collar                  NA\n5          f             caribou          collar                  NA\n6          f             caribou          collar                  NA\n  deploy.off.longitude deploy.on.latitude deploy.on.longitude deploy.on.person\n1                   NA                 NA                  NA                 \n2                   NA                 NA                  NA                 \n3                   NA                 NA                  NA                 \n4                   NA                 NA                  NA                 \n5                   NA                 NA                  NA                 \n6                   NA                 NA                  NA                 \n  deployment.comments deployment.end.comments deployment.end.type\n1                                                         unknown\n2                                                         unknown\n3                                                         unknown\n4                                                         unknown\n5                                                         unknown\n6                                                         unknown\n    deployment.id manipulation.type  study.site tag.beacon.frequency\n1 151.510_151.510              none Hart Ranges              151.510\n2        C04_C04a              none      Graham                   NA\n3         C03_C03              none      Graham                   NA\n4 151.805_151.805              none Hart Ranges              151.805\n5 151.760_151.760              none Hart Ranges              151.760\n6 151.720_151.720              none Hart Ranges              151.720\n  tag.manufacturer.name tag.model tag.serial.no\n1                                              \n2                                              \n3                                              \n4                                              \n5                                              \n6                                              \n\nnames(ref_raw)\n\n [1] \"tag.id\"                        \"animal.id\"                    \n [3] \"animal.taxon\"                  \"deploy.on.date\"               \n [5] \"deploy.off.date\"               \"animal.death.comments\"        \n [7] \"animal.life.stage\"             \"animal.reproductive.condition\"\n [9] \"animal.sex\"                    \"animal.taxon.detail\"          \n[11] \"attachment.type\"               \"deploy.off.latitude\"          \n[13] \"deploy.off.longitude\"          \"deploy.on.latitude\"           \n[15] \"deploy.on.longitude\"           \"deploy.on.person\"             \n[17] \"deployment.comments\"           \"deployment.end.comments\"      \n[19] \"deployment.end.type\"           \"deployment.id\"                \n[21] \"manipulation.type\"             \"study.site\"                   \n[23] \"tag.beacon.frequency\"          \"tag.manufacturer.name\"        \n[25] \"tag.model\"                     \"tag.serial.no\"                \n\nref_short &lt;- ref_raw %&gt;%\n  dplyr::select(\"tag.id\",\"animal.id\", \"deploy.on.date\", \"animal.sex\", \"animal.reproductive.condition\",\n                \"deployment.end.type\",\"tag.model\", \"tag.manufacturer.name\", \"tag.serial.no\"    )\n\n\nhead(loc_raw)\n\n# A tibble: 6 × 14\n    event.id timestamp location.long location.lat   DOP FixType     comments\n       &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n1 2270202009 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n2 2270202041 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n3 2270202100 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n4 2270202901 01:00.0           -123.         55.8     1 val. GPS-3D Scott   \n5 2270202132 01:00.0           -123.         55.9     1 val. GPS-3D Scott   \n6 2270202890 01:00.0           -123.         55.9     1 val. GPS-3D Scott   \n# ℹ 7 more variables: study.specific.measurement &lt;chr&gt;, sensor.type &lt;chr&gt;,\n#   individual.taxon.canonical.name &lt;chr&gt;, tag.local.identifier &lt;chr&gt;,\n#   individual.local.identifier &lt;chr&gt;, study.name &lt;chr&gt;, date &lt;chr&gt;\n\n\nWe can combine these two dataset and keep only the columns which are of interest\n\nall_data &lt;- left_join(loc_raw, ref_raw, by = c('tag.local.identifier'= 'tag.id') )\n\nall_data &lt;- all_data %&gt;% \n  dplyr::select(event.id, location.long, location.lat, DOP, FixType, comments ,\n                study.specific.measurement , sensor.type, tag.local.identifier, date, animal.id,\n                animal.sex, animal.reproductive.condition, tag.manufacturer.name, tag.model )\n\n#head(all_data)\n\n\n\n\n\n\nNow we have a single data set we can QA the data and provide more useful columns for further analysis.\n\nhead(all_data)\n\n# A tibble: 6 × 15\n    event.id location.long location.lat   DOP FixType     comments\n       &lt;dbl&gt;         &lt;dbl&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;       &lt;chr&gt;   \n1 2270202009         -124.         55.9     1 val. GPS-3D Scott   \n2 2270202041         -124.         55.9     1 val. GPS-3D Scott   \n3 2270202100         -124.         55.9     1 val. GPS-3D Scott   \n4 2270202901         -123.         55.8     1 val. GPS-3D Scott   \n5 2270202132         -123.         55.9     1 val. GPS-3D Scott   \n6 2270202890         -123.         55.9     1 val. GPS-3D Scott   \n# ℹ 9 more variables: study.specific.measurement &lt;chr&gt;, sensor.type &lt;chr&gt;,\n#   tag.local.identifier &lt;chr&gt;, date &lt;chr&gt;, animal.id &lt;chr&gt;, animal.sex &lt;chr&gt;,\n#   animal.reproductive.condition &lt;chr&gt;, tag.manufacturer.name &lt;chr&gt;,\n#   tag.model &lt;chr&gt;\n\n# check if there are NA's in the data \n\napply(all_data, 2, function(x) any(is.na(x)))\n\n                     event.id                 location.long \n                        FALSE                          TRUE \n                 location.lat                           DOP \n                         TRUE                         FALSE \n                      FixType                      comments \n                        FALSE                          TRUE \n   study.specific.measurement                   sensor.type \n                         TRUE                         FALSE \n         tag.local.identifier                          date \n                        FALSE                         FALSE \n                    animal.id                    animal.sex \n                        FALSE                         FALSE \nanimal.reproductive.condition         tag.manufacturer.name \n                        FALSE                         FALSE \n                    tag.model \n                        FALSE \n\n# Lets filter out any missing values \n\nlength(all_data$event.id)\n\n[1] 17197\n\ntdata &lt;- all_data %&gt;% \n  filter(!is.na(date)) %&gt;%\n  filter(!is.na(location.long)) %&gt;%\n  filter(!is.na(location.lat)) \n\n\n# comments \nunique(tdata$comments)\n\n[1] \"Scott\"      \"Burnt Pine\" NA          \n\n# two missing herd values which we can fill in (or delete)\n\ntdata &lt;- tdata %&gt;% \n  mutate(comments = case_when(\n    animal.id == \"BP_car043\" ~ \"Burnt Pine\", \n    animal.id == \"SC_car170\" ~ \"Scott\",\n    .default = comments\n  ))\n\n\n\n#length(tdata$event.id)\n\nNow lets covert the timestamp into a usable format\n\n# calculate time differences\ntdata &lt;- tdata  %&gt;%\n  mutate(date_time = ymd_hms(date)) \n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `date_time = ymd_hms(date)`.\nCaused by warning:\n!  5 failed to parse.\n\n# owch we still have an error in this dataset\n\n# lets see if we can find it..... \n\nhead(sort(unique(tdata$date)))\n\n[1] \"2003-12-12 13:03:29.000\" \"2003-12-13 09:03:10.000\"\n[3] \"2003-12-14 05:03:11.000\" \"2003-12-15 01:03:10.000\"\n[5] \"2003-12-15 21:04:00.000\" \"2003-12-16 17:03:10.000\"\n\ntail(sort(unique(tdata$date)))\n\n[1] \"2016-03-16 10:01:00.000\" \"2016-03-16 17:49:00.000\"\n[3] \"2016-03-16 19:49:00.000\" \"2016-03-17 17:53:00.000\"\n[5] \"2016-03-17 19:53:00.000\" \"NA\"                     \n\ntdata &lt;- tdata  %&gt;% \n  filter(date != \"NA\")\n\ntdata  &lt;- tdata  %&gt;%\n  mutate(date_time = ymd_hms(date)) \n\nhead(tdata$date_time) \n\n[1] \"2013-09-23 10:01:00 UTC\" \"2013-10-09 10:01:00 UTC\"\n[3] \"2013-10-30 10:01:00 UTC\" \"2014-08-11 10:01:00 UTC\"\n[5] \"2013-11-10 02:01:00 UTC\" \"2014-08-07 10:01:00 UTC\"\n\n# Note the Universal Coordinated Time Zone\n\n\n# lets split this data format into something more useful \n\ntdata  &lt;- tdata  %&gt;%\n  mutate(year = year(date_time )) %&gt;%\n  mutate(month = month(date_time ),\n         day = day(date_time),\n         hour = hour(date_time),\n         minute = minute(date_time))\n\n\n\n\nNow we have fixed our data entry problems we also want to review the spatial accuracy. We have two metrics: DOP (Dilution of Precision), and a Fix Type.\n\n# review the lat / longs \n\nrange(tdata$location.lat)\n\n[1]  55.2249 155.4764\n\nhist(tdata$location.lat)\n\n\n\n# above 65 latidude\n\nrange(tdata$location.long)\n\n[1] -123.6684  -22.0000\n\nhist(tdata$location.long)\n\n\n\n# greater than -100 longitude. \n\ntdata &lt;- tdata %&gt;% \n  filter(location.long &lt;= -100) %&gt;%\n  filter(location.lat &lt;= 65)\n\n#bou &lt;- st_as_sf(tdata, coords = c(\"location.long\", \"location.lat\"), crs = 4326)\n#mapview::mapview (bou)\n\n# DOP \n\nrange (tdata$DOP)\n\n[1]  1.0 43.1\n\nhist(tdata$DOP)\n\n\n\n# for this example we only want to keep fixes with a DOP less than 10m\n\nfdata &lt;- tdata %&gt;% \n  filter(DOP &lt;= 10)\n\nhist(fdata$DOP)\n\n\n\n# Fix Type : \n\nfixtype &lt;- fdata %&gt;% \n  group_by(FixType) %&gt;%\n  summarise(count = n())\n\nfixtype\n\n# A tibble: 3 × 2\n  FixType     count\n  &lt;chr&gt;       &lt;int&gt;\n1 GPS-2D         92\n2 GPS-3D        291\n3 val. GPS-3D 16801\n\n# remove the 2d locations \n\nfdata &lt;- fdata %&gt;% \n  filter(FixType != \"GPS-2D\")\n\n# see what the data looks like\nglimpse(fdata)\n\nRows: 17,092\nColumns: 21\n$ event.id                      &lt;dbl&gt; 2270202009, 2270202041, 2270202100, 2270…\n$ location.long                 &lt;dbl&gt; -123.6036, -123.5987, -123.5903, -123.49…\n$ location.lat                  &lt;dbl&gt; 55.90000, 55.87343, 55.87470, 55.83741, …\n$ DOP                           &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ FixType                       &lt;chr&gt; \"val. GPS-3D\", \"val. GPS-3D\", \"val. GPS-…\n$ comments                      &lt;chr&gt; \"Scott\", \"Scott\", \"Scott\", \"Scott\", \"Sco…\n$ study.specific.measurement    &lt;chr&gt; \"Summer\", \"Summer\", \"Summer\", \"Summer\", …\n$ sensor.type                   &lt;chr&gt; \"gps\", \"gps\", \"gps\", \"gps\", \"gps\", \"gps\"…\n$ tag.local.identifier          &lt;chr&gt; \"car170\", \"car170\", \"car170\", \"car170\", …\n$ date                          &lt;chr&gt; \"2013-09-23 10:01:00.000\", \"2013-10-09 1…\n$ animal.id                     &lt;chr&gt; \"SC_car170\", \"SC_car170\", \"SC_car170\", \"…\n$ animal.sex                    &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", …\n$ animal.reproductive.condition &lt;chr&gt; \"with calf: N\", \"with calf: N\", \"with ca…\n$ tag.manufacturer.name         &lt;chr&gt; \"ATS\", \"ATS\", \"ATS\", \"ATS\", \"ATS\", \"ATS\"…\n$ tag.model                     &lt;chr&gt; \"GPS Iridium\", \"GPS Iridium\", \"GPS Iridi…\n$ date_time                     &lt;dttm&gt; 2013-09-23 10:01:00, 2013-10-09 10:01:0…\n$ year                          &lt;dbl&gt; 2013, 2013, 2013, 2014, 2013, 2014, 2014…\n$ month                         &lt;dbl&gt; 9, 10, 10, 8, 11, 8, 9, 12, 7, 11, 6, 12…\n$ day                           &lt;int&gt; 23, 9, 30, 11, 10, 7, 19, 6, 8, 24, 20, …\n$ hour                          &lt;int&gt; 10, 10, 10, 10, 2, 10, 2, 18, 18, 2, 2, …\n$ minute                        &lt;int&gt; 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 0, 0, 1…\n\n# lets check if this column is any use? \nunique(fdata$sensor.type)\n\n[1] \"gps\"\n\n# remove the columns that we dont need\nfdata &lt;- fdata %&gt;% \n  select(-FixType, -DOP, -date, -study.specific.measurement , -sensor.type, -event.id)"
  },
  {
    "objectID": "03-intro-telemetry-data.html#conver-to-spatial-file-and-export",
    "href": "03-intro-telemetry-data.html#conver-to-spatial-file-and-export",
    "title": "Introduction to Telemetry Data",
    "section": "conver to spatial file and export",
    "text": "conver to spatial file and export\n\n# conver to a sf object \n\nbou &lt;- st_as_sf(fdata, coords = c(\"location.long\", \"location.lat\"), crs = 4326)\n\n#mapview::mapview (bou)\n\n\n# export as .gpkg\nst_write(bou, \"clean_data/caribou.gpkg\")\n\nst_write(bou, \"clean_data/caribou.shp\", append=FALSE)\n\n# note warning on names for shapefile"
  },
  {
    "objectID": "03-intro-telemetry-data.html#output-cleaned",
    "href": "03-intro-telemetry-data.html#output-cleaned",
    "title": "Introduction to Telemetry Data",
    "section": "Output cleaned",
    "text": "Output cleaned\nWe can output out cleaned data as a table\n\nwrite.csv(fdata, \"clean_data/caribou.csv\", row.names = F)"
  },
  {
    "objectID": "03-intro-telemetry-data.html#generating-tabular-summaries",
    "href": "03-intro-telemetry-data.html#generating-tabular-summaries",
    "title": "Introduction to Telemetry Data",
    "section": "Generating tabular summaries",
    "text": "Generating tabular summaries\nNow we have clean data to work with we can get to the fun data exploration part!\n\n#bou = read.csv(\"clean_data/caribou.csv\")\nbou_sf = st_read(\"clean_data/caribou.gpkg\")\n\nReading layer `caribou' from data source \n  `/Users/andy/dev/r-telemetry-workshop-nov-2023/clean_data/caribou.gpkg' \n  using driver `GPKG'\nSimple feature collection with 17092 features and 13 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -123.6684 ymin: 55.2249 xmax: -122.081 ymax: 56.01707\nGeodetic CRS:  WGS 84\n\nbou &lt;- bou_sf %&gt;%\n  cbind(st_coordinates(bou_sf)) %&gt;%\n          st_drop_geometry(bou_sf)\n\n\nhead(bou)\n\n  comments tag.local.identifier animal.id animal.sex\n1    Scott               car170 SC_car170          f\n2    Scott               car170 SC_car170          f\n3    Scott               car170 SC_car170          f\n4    Scott               car170 SC_car170          f\n5    Scott               car170 SC_car170          f\n6    Scott               car170 SC_car170          f\n  animal.reproductive.condition tag.manufacturer.name   tag.model\n1                  with calf: N                   ATS GPS Iridium\n2                  with calf: N                   ATS GPS Iridium\n3                  with calf: N                   ATS GPS Iridium\n4                  with calf: N                   ATS GPS Iridium\n5                  with calf: N                   ATS GPS Iridium\n6                  with calf: N                   ATS GPS Iridium\n            date_time year month day hour minute         X        Y\n1 2013-09-23 03:01:00 2013     9  23   10      1 -123.6036 55.90000\n2 2013-10-09 03:01:00 2013    10   9   10      1 -123.5987 55.87343\n3 2013-10-30 03:01:00 2013    10  30   10      1 -123.5903 55.87470\n4 2014-08-11 03:01:00 2014     8  11   10      1 -123.4915 55.83741\n5 2013-11-09 18:01:00 2013    11  10    2      1 -123.4740 55.87877\n6 2014-08-07 03:01:00 2014     8   7   10      1 -123.4412 55.85412\n\nglimpse(bou)\n\nRows: 17,092\nColumns: 15\n$ comments                      &lt;chr&gt; \"Scott\", \"Scott\", \"Scott\", \"Scott\", \"Sco…\n$ tag.local.identifier          &lt;chr&gt; \"car170\", \"car170\", \"car170\", \"car170\", …\n$ animal.id                     &lt;chr&gt; \"SC_car170\", \"SC_car170\", \"SC_car170\", \"…\n$ animal.sex                    &lt;chr&gt; \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", …\n$ animal.reproductive.condition &lt;chr&gt; \"with calf: N\", \"with calf: N\", \"with ca…\n$ tag.manufacturer.name         &lt;chr&gt; \"ATS\", \"ATS\", \"ATS\", \"ATS\", \"ATS\", \"ATS\"…\n$ tag.model                     &lt;chr&gt; \"GPS Iridium\", \"GPS Iridium\", \"GPS Iridi…\n$ date_time                     &lt;dttm&gt; 2013-09-23 03:01:00, 2013-10-09 03:01:0…\n$ year                          &lt;dbl&gt; 2013, 2013, 2013, 2014, 2013, 2014, 2014…\n$ month                         &lt;dbl&gt; 9, 10, 10, 8, 11, 8, 9, 12, 7, 11, 6, 12…\n$ day                           &lt;int&gt; 23, 9, 30, 11, 10, 7, 19, 6, 8, 24, 20, …\n$ hour                          &lt;int&gt; 10, 10, 10, 10, 2, 10, 2, 18, 18, 2, 2, …\n$ minute                        &lt;int&gt; 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 0, 0, 1…\n$ X                             &lt;dbl&gt; -123.6036, -123.5987, -123.5903, -123.49…\n$ Y                             &lt;dbl&gt; 55.90000, 55.87343, 55.87470, 55.83741, …\n\n\nMany Questions we can ask here:\n\nhow many herds do we have?\nhow many animals in each herd?\nwhat is the sex ratio of collared animals?\nwhat is the duration of each collar? Start and end years?\n\n\nNo_herds = unique(bou$comments)\n\nno_records &lt;- bou %&gt;% \n  group_by(comments)%&gt;% \n  summarise(count = n())\n\n\nno_animals_sex &lt;- bou %&gt;% \n  group_by(comments, animal.sex)%&gt;% \n  summarise(count = n())\n\n`summarise()` has grouped output by 'comments'. You can override using the\n`.groups` argument.\n\nno_animals_id &lt;- bou %&gt;% \n  group_by(comments, animal.id)%&gt;% \n  summarise(count = n())\n\n`summarise()` has grouped output by 'comments'. You can override using the\n`.groups` argument.\n\n\nLets concentrate on the Scott herd.\n\n# look at the Scott herd.\n\nsbou &lt;- bou %&gt;% \n  filter(comments == \"Scott\")\n\n# how many animals?\nno_animals &lt;- unique(sbou$animal.id)\n\n\n# lets look at the time period: \n\np1 &lt;- ggplot(sbou, aes(year, fill = animal.id))+\n    geom_bar(position = \"dodge\")#+\n    #xlim(2021,2024)#+\n\n\n# duration of the collars within the Scott herd. \n\ntable_max &lt;- sbou %&gt;% \n  dplyr::select(animal.id, date_time) %&gt;%\n  slice_max(date_time, by = animal.id) \ncolnames(table_max)&lt;- c(\"animal.id\",\"max\")\n\ntable_min &lt;- sbou %&gt;% \n  dplyr::select(animal.id, date_time) %&gt;%\n  slice_min(date_time, by = animal.id) \ncolnames(table_min)&lt;- c(\"animal.id\",\"min\")\n\ndur &lt;- left_join(table_max, table_min, by = join_by(animal.id)) %&gt;%\n  distinct() %&gt;%\n  dplyr::mutate(duration = max - min) %&gt;%\n  mutate(dur_days = round( duration,1))%&gt;%\n  mutate(dur_hrs = round(as.numeric(dur_days)*24,1)) %&gt;%\n #mutate(dur_days = round( dur_hrs/24,1))%&gt;%\n  mutate(year_start = year(min), \n         year_end = year(max))\n\n\n\ndur_plot &lt;- ggplot(dur, aes(y=factor(animal.id))) +\n  geom_segment(aes(x=min, xend=max, y=factor(animal.id), yend=factor(animal.id)), size=1)+\n  xlab(\"Date\") + ylab(\"Tag\") \n\ndur_plot\n\n\n\n# months of the year. \np_duration &lt;- ggplot(sbou, aes(factor(month), fill = factor(year)))+\n  geom_bar(position = \"dodge\") +\n  #xlim(1,12)+\n  facet_wrap(~animal.id)+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\n\n\n# months of the year. \np_duration &lt;- ggplot(sbou, aes(factor(year), fill = factor(month)))+\n  geom_bar(position = \"dodge\") +\n  #xlim(1,12)+\n  facet_wrap(~animal.id)+\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))"
  },
  {
    "objectID": "05-vector-bcdata.html",
    "href": "05-vector-bcdata.html",
    "title": "Exploring the BC Data Catalogue with R",
    "section": "",
    "text": "library(bcdata)\n\n\nAttaching package: 'bcdata'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nbcdc_search(\"caribou\")\n\nList of B.C. Data Catalogue Records\nNumber of records: 43\nTitles:\n1: Causes of Caribou Mortality (other)\n ID: 64ff3af9-50c4-4914-a276-777b37eab2a2\n Name: causes-of-caribou-mortality\n2: Boreal Caribou Habitat Data\nThis record has no resources. bcdata will not be able to access any\n data.\n ID: 9cd36e31-8981-4ba3-bc2c-ae355b2c9e4e\n Name: boreal-caribou-habitat-data\n3: Caribou in British Columbia (other)\n ID: c95424ee-009b-4ecf-b0af-c3eb1065055f\n Name: caribou-in-british-columbia\n4: Itcha Ilgachuz Caribou Habitat Area (multiple, wms, kml)\n ID: 6e58aa4d-7e29-4a0e-8ca4-66752d9355db\n Name: itcha-ilgachuz-caribou-habitat-area\n5: Caribou Herd Locations for BC (multiple, wms, kml, arcgis_rest)\n ID: 2b217585-f48d-4d9f-b7ba-746909ac35ca\n Name: caribou-herd-locations-for-bc\n6: Caribou Capability Clearwater Forest District (oracle_sde)\n ID: 82a34614-f34e-41d1-8011-810fc7b96c47\n Name: caribou-capability-clearwater-forest-district\n7: Caribou Suitability Clearwater Forest District (oracle_sde)\n ID: 5c9c8019-6243-427e-9b7d-7bf732c4d326\n Name: caribou-suitability-clearwater-forest-district\n8: Caribou in British Columbia Spatial View (arcgis_rest)\n ID: b96694e0-e07f-4594-a016-14adbbb58747\n Name: caribou-in-british-columbia-spatial-view\n9: Caribou Recovery Areas - Polygons - Kootenay Region (oracle_sde)\n ID: 0a477a2e-5304-4716-bdbd-0e0edf60d539\n Name: caribou-recovery-areas-polygons-kootenay-region\n10: Caribou Recovery Areas - Lines - Kootenay Region (oracle_sde)\n ID: 56fe6b42-30b8-40da-92d2-eac110025f7b\n Name: caribou-recovery-areas-lines-kootenay-region\n11: Boreal Caribou Core Habitat Areas - Peace Region (multiple)\n ID: 8d197a91-f137-45b8-8c94-0cc12a3c7752\n Name: boreal-caribou-core-habitat-areas-peace-region\n12: Caribou Movement Corridors Clearwater Forest District - Lines\n (multiple)\n ID: 7c7768f2-7a3d-4a8f-958e-e7a8dd2b18f2\n Name: caribou-movement-corridors-clearwater-forest-district-lines\n13: Caribou Habitat Suitability - Morice FD - Skeena Region\n (oracle_sde)\n ID: f88a9b98-c9c3-4b1b-a513-64d60390629f\n Name: caribou-habitat-suitability-morice-fd-skeena-region\n14: GPS Derived Caribou Locations Clearwater Forest District\n (oracle_sde)\n ID: 88db1d2e-4c09-4d30-a8f4-b93c0e355767\n Name: gps-derived-caribou-locations-clearwater-forest-district\n15: North Thompson Caribou Habitat Clearwater Forest District\n (multiple)\n ID: 6271d5dc-4870-41e4-903d-4d378c297353\n Name: north-thompson-caribou-habitat-clearwater-forest-district\n16: Caribou Historic Use Areas - Telkwa - Skeena Region (oracle_sde)\n ID: f946aa21-c215-4174-b977-e4f0a7c21805\n Name: caribou-historic-use-areas-telkwa-skeena-region\n17: Caribou Habitat Mapping - Tweedsmuir Entiako - Skeena Region\n (oracle_sde)\n ID: 50f0d612-95eb-46b7-b4eb-9b67672bdece\n Name: caribou-habitat-mapping-tweedsmuir-entiako-skeena-region\n18: Moose and Caribou SRB Surveys - Skeena Region (oracle_sde)\n ID: 52f89d1a-eb97-4f5d-92a1-c6eeded0806b\n Name: moose-and-caribou-srb-surveys-skeena-region\n19: Caribou Habitat Model for the Western Cariboo Region (2017)\n (multiple, wms, kml, pdf)\n ID: 6d983c4e-7d5f-4a16-975d-f33a2dfbd6e0\n Name: caribou-habitat-model-for-the-western-cariboo-region-2017-\n20: Caribou Habitat Model for the Western Cariboo Region (2001)\n (multiple, pdf, wms, kml)\n ID: 7ea6556b-c113-4194-92f2-7ddb55a340b6\n Name: caribou-habitat-model-for-the-western-cariboo-region-2001\n21: Caribou Survey Units for Stratified Random Block - Skeena Region\n (oracle_sde)\n ID: 72f95c0c-592b-4eb1-936d-b78474be8c9d\n Name: caribou-survey-units-for-stratified-random-block-skeena-region\n22: Caribou Habitat Model - E. Cariboo Region/Columbia Highlands/N.\n Columbia Mountains (2001) (multiple, wms, kml)\n ID: 321fbe63-3537-4c01-844e-463b8553ff3c\n Name:\n  caribou-habitat-model-e-cariboo-region-columbia-highlands-n-columbia-mountains-2001\n23: Northern Caribou Habitat Units of the Itcha and Ilgachuz Areas -\n Cariboo Region (multiple, other, wms, kml)\n ID: 65cb3683-f6a4-46d2-b6fc-4a5ed099d5a1\n Name:\n  northern-caribou-habitat-units-of-the-itcha-and-ilgachuz-areas-cariboo-region\n24: Broad Ecosystem Inventory Wildlife Habitat Ratings Interpretations\n for Mammals (oracle_sde)\n ID: 36afb87d-58e7-4f05-b790-200ea849a8c2\n Name:\n  broad-ecosystem-inventory-wildlife-habitat-ratings-interpretations-for-mammals\n25: Wolves and Linear Features (other)\n ID: 8ed0711d-56b6-41df-8c3c-4e41258545b7\n Name: wolves-and-linear-features\n26: PNCP - High Elevation Winter Range (multiple, wms, kml)\n ID: b112e825-0642-46f9-9895-513fcbb8e89e\n Name: pncp-high-elevation-winter-range\n27: Northern Rockies Snowmobile Management (other)\n ID: 6554ed31-ae65-4120-a8fe-a824f3e2a015\n Name: northern-rockies-snowmobile-management\n28: Landscape Units (Subdivisions) for Wildlife Habitat Area 5-086\n (multiple, wms, kml)\n ID: 5018ae96-a5f1-4709-9848-981561032f3c\n Name: landscape-units-subdivisions-for-wildlife-habitat-area-5-086\n29: Central Selkirk Snowmobile Management Map (other)\n ID: 02d0c773-c17d-480d-b560-3814561016b3\n Name: central-selkirk-snowmobile-management-map\n30: Central Selkirk Snowmobile Management Zones (other)\n ID: 86e1f84a-274f-4b48-8b45-1564b10ef58d\n Name: central-selkirk-snowmobile-management-zones\n31: Snowmobile Management Areas - Access Management Areas (AMA)\n (multiple, wms, kml)\n ID: e6e31638-afe9-4355-aa4d-9853e53de55c\n Name: snowmobile-management-areas-access-management-areas-ama\n32: Snowmobile Management Trails - Access Management Area (AMA)\n (multiple, wms, kml)\n ID: fe210f8a-60f5-43f8-b9ab-0f0d70ca44f8\n Name: snowmobile-management-trails-access-management-area-ama\n33: EcoCat - The Ecological Reports Catalogue (other)\n ID: 9241367c-54f9-483d-a918-67ed53c1e080\n Name: ecocat-the-ecological-reports-catalogue\n34: Habitat Capability for the Cariboo Region (multiple)\n ID: b9f74385-e5b2-4c84-a049-ce2f5d207338\n Name: habitat-capability-for-the-cariboo-region\n35: Wildlife Species Inventory - Survey Summary - Publicly Available\n (multiple)\n ID: d65e64a5-1477-46d7-a4f6-f978963b21cf\n Name: wildlife-species-inventory-survey-summary-publicly-available\n36: Wildlife Species Inventory - Masked Survey Observations - Publicly\n Available (multiple)\n ID: 067f8b29-1329-4878-8be8-faf893b9c3eb\n Name:\n  wildlife-species-inventory-masked-survey-observations-publicly-available\n37: Wildlife Species Inventory - Survey Observation Points - Ungulates\n - All (multiple)\n ID: 433101ce-18e5-4543-845e-71b240351d7f\n Name:\n  wildlife-species-inventory-survey-observation-points-ungulates-all\n38: Wildlife Species Inventory - Survey Observation Points - Ungulates\n - Publicly Available (multiple, wms, kml)\n ID: 1733feb0-9e33-4228-8078-d0f0e4df568e\n Name:\n  wildlife-species-inventory-survey-observation-points-ungulates-publicly-available\n39: Hunter Sample Survey Estimates 1976 to Current (csv, xlsx)\n ID: 8425b848-517e-4a20-b26c-6121720382af\n Name: hunter-sample-survey-estimates-1976-to-current\n40: Non Legal Planning Features - All - Polygon (multiple, other)\n ID: ad71d3c2-0776-4233-9765-18fbf18580cf\n Name: non-legal-planning-features-all-polygon\n41: Non Legal Planning Features - Current - Polygon (multiple, wms,\n kml, other)\n ID: 5d859a89-f173-4006-82f9-16254de2c1fc\n Name: non-legal-planning-features-current-polygon\n42: Strategic Land and Resource Plans - All (multiple, other)\n ID: 298d1034-c1be-4fd1-ad4b-d00ad5ab4b88\n Name: strategic-land-and-resource-plans-all\n43: Strategic Land and Resource Plans - Current (multiple, wms, kml,\n other, oracle_sde)\n ID: 4b142d4c-83d6-4ecc-b66c-66601ae65992\n Name: strategic-land-and-resource-plans-current\n\nAccess a single record by calling `bcdc_get_record(ID)` with the ID\n from the desired record."
  },
  {
    "objectID": "05-vector-bcdata.html#create-an-area-of-interest-aoi",
    "href": "05-vector-bcdata.html#create-an-area-of-interest-aoi",
    "title": "Exploring the BC Data Catalogue with R",
    "section": "Create an Area of Interest (AOI)",
    "text": "Create an Area of Interest (AOI)\nst_bbox(…)"
  }
]