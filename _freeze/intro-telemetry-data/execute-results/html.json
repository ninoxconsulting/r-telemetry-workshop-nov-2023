{
  "hash": "73142eff7c4fedceebb5e072446f7600",
  "result": {
    "markdown": "---\ntitle: \"Introduction to Telemetry Data\"\n---\n\n\n## How to QA and summarise your Telemetry Data\n\nIn this course we will be using Telemetry data from Mountain Caribou (*Rangifer terendus*) herds in the Peace region of British Columbia. While the full dataset and metadata can be found on [movebank](https://www.movebank.org/cms/webapp?gwt_fragment=page=studies,path=study216040785), we will be working on a modified subset throughout this course. TEST\n\n### 1. Reading our data into R.\n\nOur first step is to see what our data looks like. In this course we will be providing two csv files (Mountain caribou in British Columbia-reference-data.csv and Mountain caribou.csv).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in our data files.\n\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.9.3, GDAL 3.5.2, PROJ 8.2.1; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nref_raw <- read.csv(\"data/Mountain caribou in British Columbia-reference-data.csv\")\n\nloc_raw <- read_excel(\"data/Mountain caribou.xlsx\")\n```\n:::\n\n\nLets take a look....\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(ref_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   tag.id  animal.id      animal.taxon deploy.on.date deploy.off.date\n1  151.51 HR_151.510 Rangifer tarandus                               \n2    C04a     GR_C04 Rangifer tarandus                        59:00.0\n3     C03     GR_C03 Rangifer tarandus                               \n4 151.805 HR_151.805 Rangifer tarandus                               \n5  151.76 HR_151.760 Rangifer tarandus                               \n6  151.72 HR_151.720 Rangifer tarandus                               \n  animal.death.comments animal.life.stage animal.reproductive.condition\n1                                                                      \n2                                                                      \n3                                                                      \n4                                                                      \n5                                                                      \n6                                                                      \n  animal.sex animal.taxon.detail attachment.type deploy.off.latitude\n1          f             caribou          collar                  NA\n2          f             caribou          collar                  NA\n3          f             caribou          collar                  NA\n4          f             caribou          collar                  NA\n5          f             caribou          collar                  NA\n6          f             caribou          collar                  NA\n  deploy.off.longitude deploy.on.latitude deploy.on.longitude deploy.on.person\n1                   NA                 NA                  NA                 \n2                   NA                 NA                  NA                 \n3                   NA                 NA                  NA                 \n4                   NA                 NA                  NA                 \n5                   NA                 NA                  NA                 \n6                   NA                 NA                  NA                 \n  deployment.comments deployment.end.comments deployment.end.type\n1                                                         unknown\n2                                                         unknown\n3                                                         unknown\n4                                                         unknown\n5                                                         unknown\n6                                                         unknown\n    deployment.id manipulation.type  study.site tag.beacon.frequency\n1 151.510_151.510              none Hart Ranges              151.510\n2        C04_C04a              none      Graham                   NA\n3         C03_C03              none      Graham                   NA\n4 151.805_151.805              none Hart Ranges              151.805\n5 151.760_151.760              none Hart Ranges              151.760\n6 151.720_151.720              none Hart Ranges              151.720\n  tag.manufacturer.name tag.model tag.serial.no\n1                                              \n2                                              \n3                                              \n4                                              \n5                                              \n6                                              \n```\n:::\n\n```{.r .cell-code}\nnames(ref_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"tag.id\"                        \"animal.id\"                    \n [3] \"animal.taxon\"                  \"deploy.on.date\"               \n [5] \"deploy.off.date\"               \"animal.death.comments\"        \n [7] \"animal.life.stage\"             \"animal.reproductive.condition\"\n [9] \"animal.sex\"                    \"animal.taxon.detail\"          \n[11] \"attachment.type\"               \"deploy.off.latitude\"          \n[13] \"deploy.off.longitude\"          \"deploy.on.latitude\"           \n[15] \"deploy.on.longitude\"           \"deploy.on.person\"             \n[17] \"deployment.comments\"           \"deployment.end.comments\"      \n[19] \"deployment.end.type\"           \"deployment.id\"                \n[21] \"manipulation.type\"             \"study.site\"                   \n[23] \"tag.beacon.frequency\"          \"tag.manufacturer.name\"        \n[25] \"tag.model\"                     \"tag.serial.no\"                \n```\n:::\n\n```{.r .cell-code}\nref_short <- ref_raw %>%\n  dplyr::select(\"tag.id\",\"animal.id\", \"deploy.on.date\", \"animal.sex\", \"animal.reproductive.condition\",\n                \"deployment.end.type\",\"tag.model\", \"tag.manufacturer.name\", \"tag.serial.no\"    )\n\n\n\n\nhead(loc_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n    event.id timestamp location.long location.lat   DOP FixType     comments\n       <dbl> <chr>             <dbl>        <dbl> <dbl> <chr>       <chr>   \n1 2270202009 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n2 2270202041 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n3 2270202100 01:00.0           -124.         55.9     1 val. GPS-3D Scott   \n4 2270202901 01:00.0           -123.         55.8     1 val. GPS-3D Scott   \n5 2270202132 01:00.0           -123.         55.9     1 val. GPS-3D Scott   \n6 2270202890 01:00.0           -123.         55.9     1 val. GPS-3D Scott   \n# ℹ 7 more variables: study.specific.measurement <chr>, sensor.type <chr>,\n#   individual.taxon.canonical.name <chr>, tag.local.identifier <chr>,\n#   individual.local.identifier <chr>, study.name <chr>, date <chr>\n```\n:::\n:::\n\n\nWe can combine these two dataset and keep only the columns which are of interest\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data <- left_join(loc_raw, ref_raw, by = c('tag.local.identifier'= 'tag.id') )\n\nall_data <- all_data %>% \n  dplyr::select(event.id, location.long, location.lat, DOP, FixType, comments ,\n                study.specific.measurement , sensor.type, tag.local.identifier, date, animal.id,\n                animal.sex, animal.reproductive.condition, tag.manufacturer.name, tag.model )\n\nhead(all_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 15\n    event.id location.long location.lat   DOP FixType     comments\n       <dbl>         <dbl>        <dbl> <dbl> <chr>       <chr>   \n1 2270202009         -124.         55.9     1 val. GPS-3D Scott   \n2 2270202041         -124.         55.9     1 val. GPS-3D Scott   \n3 2270202100         -124.         55.9     1 val. GPS-3D Scott   \n4 2270202901         -123.         55.8     1 val. GPS-3D Scott   \n5 2270202132         -123.         55.9     1 val. GPS-3D Scott   \n6 2270202890         -123.         55.9     1 val. GPS-3D Scott   \n# ℹ 9 more variables: study.specific.measurement <chr>, sensor.type <chr>,\n#   tag.local.identifier <chr>, date <chr>, animal.id <chr>, animal.sex <chr>,\n#   animal.reproductive.condition <chr>, tag.manufacturer.name <chr>,\n#   tag.model <chr>\n```\n:::\n:::\n\n\n### 2. Clean and QA the data\n\nNow we have a single dataset we can QA the data and provide more useful columns for further analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(all_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 15\n    event.id location.long location.lat   DOP FixType     comments\n       <dbl>         <dbl>        <dbl> <dbl> <chr>       <chr>   \n1 2270202009         -124.         55.9     1 val. GPS-3D Scott   \n2 2270202041         -124.         55.9     1 val. GPS-3D Scott   \n3 2270202100         -124.         55.9     1 val. GPS-3D Scott   \n4 2270202901         -123.         55.8     1 val. GPS-3D Scott   \n5 2270202132         -123.         55.9     1 val. GPS-3D Scott   \n6 2270202890         -123.         55.9     1 val. GPS-3D Scott   \n# ℹ 9 more variables: study.specific.measurement <chr>, sensor.type <chr>,\n#   tag.local.identifier <chr>, date <chr>, animal.id <chr>, animal.sex <chr>,\n#   animal.reproductive.condition <chr>, tag.manufacturer.name <chr>,\n#   tag.model <chr>\n```\n:::\n\n```{.r .cell-code}\n# check if there are NA's in the data \n\napply(all_data, 2, function(x) any(is.na(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                     event.id                 location.long \n                        FALSE                          TRUE \n                 location.lat                           DOP \n                         TRUE                         FALSE \n                      FixType                      comments \n                        FALSE                          TRUE \n   study.specific.measurement                   sensor.type \n                         TRUE                         FALSE \n         tag.local.identifier                          date \n                        FALSE                         FALSE \n                    animal.id                    animal.sex \n                        FALSE                         FALSE \nanimal.reproductive.condition         tag.manufacturer.name \n                        FALSE                         FALSE \n                    tag.model \n                        FALSE \n```\n:::\n\n```{.r .cell-code}\n# Lets filter out any missing values \n\nlength(all_data$event.id)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17197\n```\n:::\n\n```{.r .cell-code}\ntdata <- all_data %>% \n  filter(!is.na(date)) %>%\n  filter(!is.na(location.long)) %>%\n  filter(!is.na(location.lat))\n\n\nlength(tdata$event.id)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17195\n```\n:::\n:::\n\n\nNow lets covert the timestamp into a usable format\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\n# calculate time differences\ntdata <- tdata  %>%\n  mutate(date_time = ymd_hms(date)) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `date_time = ymd_hms(date)`.\nCaused by warning:\n!  5 failed to parse.\n```\n:::\n\n```{.r .cell-code}\n# owch we still have an error in this dataset\n\n# lets see if we can find it..... \n\nhead(sort(unique(tdata$date)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2003-12-12 13:03:29.000\" \"2003-12-13 09:03:10.000\"\n[3] \"2003-12-14 05:03:11.000\" \"2003-12-15 01:03:10.000\"\n[5] \"2003-12-15 21:04:00.000\" \"2003-12-16 17:03:10.000\"\n```\n:::\n\n```{.r .cell-code}\ntail(sort(unique(tdata$date)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2016-03-16 10:01:00.000\" \"2016-03-16 17:49:00.000\"\n[3] \"2016-03-16 19:49:00.000\" \"2016-03-17 17:53:00.000\"\n[5] \"2016-03-17 19:53:00.000\" \"NA\"                     \n```\n:::\n\n```{.r .cell-code}\ntdata <- tdata  %>% \n  filter(date != \"NA\")\n\ntdata  <- tdata  %>%\n  mutate(date_time = ymd_hms(date)) \n\n# Note the Universal Coordinated Time Zone\n\n\n# lets split this data format into something more useful \n\ntdata  <- tdata  %>%\n  mutate(year = year(date_time )) %>%\n  mutate(month = month(date_time ),\n         day = day(date_time),\n         hour = hour(date_time),\n         minute = minute(date_time))\n```\n:::\n\n\nNow we have fixed our data entry problems we also want to review the spatial accuracy. We have two metrics : DOP (Dilution of Precision), and a Fix Type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# DOP \n\nrange (tdata$DOP)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  1.0 43.1\n```\n:::\n\n```{.r .cell-code}\nhist(tdata$DOP)\n```\n\n::: {.cell-output-display}\n![](intro-telemetry-data_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# for this example we only want to keep fixes with a DOP less than 10m\n\nfdata <- tdata %>% \n  filter(DOP <= 10)\n\n\n# Fix Type : \n\nfixtype <- fdata %>% \n  group_by(FixType) %>%\n  summarise(count = n())\n```\n:::\n\n\n## Cleaning and preparing telemetry data\n\n## Generating tabular summaries\n",
    "supporting": [
      "intro-telemetry-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}