{
  "hash": "a02e5b46eed4dd9a881a597aeea93e81",
  "result": {
    "markdown": "---\ntitle: \"Exploring the BC Data Catalogue with R\"\nexecute: \n  cache: true\nknitr:\n  opts_chunk:\n    message: false\n    warning: false\n---\n\n\n## Vector\n\nBasic list, not exclusive. bu fine for demo purpose\n\n1) VRI  - gen to fiddle with this a little. \n2) Roads\n3) water lakes/wetlands\n4) water stream\n5) disturbance - cutblocks < 30yrs \n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-1_ad2774e28fb55e54c65e7f5203b3fed2'}\n\n```{.r .cell-code}\nlibrary(bcdata)\nlibrary(sf)\nlibrary(dplyr)\n```\n:::\n\n\n## Create an Area of Interest (AOI)\n\nWe'll read in the caribou data created in the previous module, and create an \narea of interest (a bounding box) around it, so we can use that to spatially \nsubset the covariate data we will be using.\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-2_0cd68b30bd3810ffffaa3106b21801cf'}\n\n```{.r .cell-code}\nscott <- read_sf(\"clean_data/caribou.gpkg\") |> \n  filter(comments == \"Scott\") |> \n  st_transform(3005)\n\nscott_bbox <- st_bbox(scott)\n\n## Round to nearest 100m outside the box to align with raster grids\nscott_bbox[\"xmin\"] <- floor(scott_bbox[\"xmin\"] / 100) * 100\nscott_bbox[\"ymin\"] <- floor(scott_bbox[\"ymin\"] / 100) * 100\nscott_bbox[\"xmax\"] <- ceiling(scott_bbox[\"xmax\"] / 100) * 100\nscott_bbox[\"ymax\"] <- ceiling(scott_bbox[\"ymax\"] / 100) * 100\n\nscott_aoi <- st_as_sfc(scott_bbox)\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-3_d5b2b0cd04c3b1d379e2f2a80fbef7f8'}\n\n```{.r .cell-code}\nwrite_sf(scott_aoi, file.path(\"clean_data\", \"scott_aoi.gpkg\"), append = FALSE)\n```\n:::\n\n\n## BEC\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-4_871fe002a9f4431049b06d65650f72bb'}\n\n```{.r .cell-code}\nbec <- bcdc_query_geodata(\"f358a53b-ffde-4830-a325-a5a03ff672c3\") |>\n    filter(INTERSECTS(scott_aoi)) |> \n    collect() |> \n    select(MAP_LABEL)\n\nplot(bec)\n```\n\n::: {.cell-output-display}\n![](05-vector-bcdata_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-5_b766e38a7a96f0cff598e13afeaa2988'}\n\n```{.r .cell-code}\nwrite_sf(bec, file.path(\"clean_data\", \"bec.gpkg\"))\n```\n:::\n\n \n## VRI\n\nSee a list of [VRI codes](https://www2.gov.bc.ca/assets/gov/farming-natural-resources-and-industry/forestry/stewardship/forest-analysis-inventory/data-management/standards/vegcomp_poly_rank1_data_dictionaryv5_2019.pdf).\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-6_2cdcf18e7c4146b4a10ca2cd858edcd9'}\n\n```{.r .cell-code}\nvri <- bcdc_query_geodata(\"2ebb35d8-c82f-4a17-9c96-612ac3532d55\") |> \n  filter(INTERSECTS(scott_aoi)) |> \n  select(PROJ_AGE_CLASS_CD_1,BCLCS_LEVEL_4,CROWN_CLOSURE_CLASS_CD) |>  \n  collect() |> \n  st_intersection(scott_aoi)\n```\n:::\n\n\nWe want to split this into separate files for different variables:\n\n- Coniferous-leading stands\n- Stands with age greater than 40 yrs (age class >=3)\n- Crown closure\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-7_ceaa91f2c89609f57ebec10e6f5cedfd'}\n\n```{.r .cell-code}\n# Tree coniferous leading - select coniferous leading vri plots\nvri_conif <- vri |>  \n    mutate(conif = BCLCS_LEVEL_4) |> \n    filter(conif == \"TC\") |> \n    select(conif)\n\n#plot(vri_conif$BCLCS_LEVEL_4)\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-8_d99b23738407243817fd446446ed3479'}\n\n```{.r .cell-code}\nwrite_sf(vri_conif, file.path(\"clean_data\",\"vri_conif.gpkg\") , append = FALSE)\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-9_69dbfd692eb2af3fc839a37c8a522bb9'}\n\n```{.r .cell-code}\n# Age class greater than 40 years\nvri_ageclass <- vri |> \n    mutate(age_class = as.numeric(PROJ_AGE_CLASS_CD_1)) |> \n    filter(age_class >= 3) |> \n    select(age_class)\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-10_031e44386334e49e4fad881e1b6167e7'}\n\n```{.r .cell-code}\nwrite_sf(vri_ageclass, file.path(\"clean_data\", \"vri_ageclass.gpkg\"), append = FALSE)\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-11_ea63685f757451ef53832ab55fe5fcb4'}\n\n```{.r .cell-code}\n# Crown closure class \nvri_cc <- vri |> \n    mutate(cc_class = as.numeric(CROWN_CLOSURE_CLASS_CD)) |> \n    select(cc_class)\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-12_5a483c4d0d3b0078e0416dc904354b23'}\n\n```{.r .cell-code}\nwrite_sf(vri_cc, file.path(\"clean_data\", \"vri_cc.gpkg\"), append = FALSE)\n```\n:::\n\n \n## Cutblocks\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-13_4ad46c1927a3e49cdc39d975bd9edbd7'}\n\n```{.r .cell-code}\ncutblocks <- bcdc_query_geodata(\"b1b647a6-f271-42e0-9cd0-89ec24bce9f7\") |>\n  filter(\n    INTERSECTS(scott_aoi), \n    HARVEST_YEAR >= 1993) |>\n  select(HARVEST_YEAR) |>\n  collect()\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-14_92742484f150456be5358a5243270c27'}\n\n```{.r .cell-code}\nwrite_sf(cutblocks, file.path(\"clean_data\", \"cutblocks.gpkg\"), append = FALSE)\n```\n:::\n\n\n## Water bodies\n\n### Searching the catologue for the BC Freshwater Atlas\n\nWe can search the catalogue for data using keywords, with `bcdc_search()`. Control\nthe number of results returned with `n`.\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-15_aa6a8e64891fcef87d5081ad89d54a02'}\n\n```{.r .cell-code}\nbcdc_search(\"freshwater atlas\", n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of B.C. Data Catalogue Records\nNumber of records: 20\nTitles:\n1: Freshwater Atlas Lakes (multiple, html, pdf, wms, kml)\n ID: cb1e3aba-d3fe-4de1-a2d4-b8b6650fb1f6\n Name: freshwater-atlas-lakes\n2: Freshwater Atlas Rivers (multiple, fgdb, pdf, wms, kml)\n ID: f7dac054-efbf-402f-ab62-6fc4b32a619e\n Name: freshwater-atlas-rivers\n3: Freshwater Atlas Obstructions (multiple, html, pdf, wms, kml)\n ID: 64797286-3ca5-4202-9064-a7f790321e9e\n Name: freshwater-atlas-obstructions\n4: Freshwater Atlas Watersheds (multiple, html, pdf, wms, kml, fgdb)\n ID: 3ee497c4-57d7-47f8-b030-2e0c03f8462a\n Name: freshwater-atlas-watersheds\n5: Freshwater Atlas Coastlines (multiple, html, pdf, wms, kml)\n ID: 87b1d6a7-d4d1-4c25-a879-233becdbffed\n Name: freshwater-atlas-coastlines\n6: Freshwater Atlas Glaciers (multiple, html, pdf, wms, kml)\n ID: 8f2aee65-9f4c-4f72-b54c-0937dbf3e6f7\n Name: freshwater-atlas-glaciers\n7: Freshwater Atlas Wetlands (multiple, html, pdf, wms, kml)\n ID: 93b413d8-1840-4770-9629-641d74bd1cc6\n Name: freshwater-atlas-wetlands\n8: Freshwater Atlas Islands (multiple, html, pdf, wms, kml)\n ID: 4483aeea-df26-4b83-a565-934c769e74de\n Name: freshwater-atlas-islands\n9: Freshwater Atlas Watershed Boundaries (multiple, html, pdf, wms,\n kml, fgdb)\n ID: ab758580-809d-4e11-bb2c-df02ac5465c9\n Name: freshwater-atlas-watershed-boundaries\n10: Freshwater Atlas Linear Boundaries (multiple, html, pdf, wms, kml,\n fgdb)\n ID: 2af1388e-d5f7-46dc-a6e2-f85415ddbd1c\n Name: freshwater-atlas-linear-boundaries\n11: Freshwater Atlas Watershed Groups (multiple, html, pdf, wms, kml)\n ID: 51f20b1a-ab75-42de-809d-bf415a0f9c62\n Name: freshwater-atlas-watershed-groups\n12: Freshwater Atlas Manmade Waterbodies (multiple, html, pdf, wms,\n kml)\n ID: 055fd71e-b771-4d47-a863-8a54f91a954c\n Name: freshwater-atlas-manmade-waterbodies\n13: Freshwater Atlas Named Watersheds (multiple, html, pdf, wms, kml)\n ID: ea63ea04-eab0-4b83-8729-f8a93ac688a1\n Name: freshwater-atlas-named-watersheds\n14: Freshwater Atlas Assessment Watersheds (multiple, html, pdf, wms,\n kml)\n ID: 97d8ef37-b8d2-4c3b-b772-6b25c1db13d0\n Name: freshwater-atlas-assessment-watersheds\n15: Freshwater Atlas Stream Directions (multiple, html, pdf, wms, kml)\n ID: d7165359-52ef-41d0-b762-c53e3468ff3f\n Name: freshwater-atlas-stream-directions\n16: Freshwater Atlas Stream Network (multiple, html, pdf, wms, kml,\n fgdb)\n ID: 92344413-8035-4c08-b996-65a9b3f62fca\n Name: freshwater-atlas-stream-network\n17: Freshwater Atlas Edge Type Codes (multiple, html, pdf)\n ID: 509cbf74-7ee7-44d3-a88d-4e088ea67325\n Name: freshwater-atlas-edge-type-codes\n18: Freshwater Atlas Waterbody Type Codes (multiple, html, pdf)\n ID: ade4f36a-1fd4-4583-8253-2b2a1bbe34ff\n Name: freshwater-atlas-waterbody-type-codes\n19: Freshwater Atlas Watershed Type Codes (multiple, html, pdf)\n ID: f7efa3ea-bf1c-4c4f-bb33-ba841aa076c0\n Name: freshwater-atlas-watershed-type-codes\n20: Freshwater Atlas Named Point Features (multiple, html, pdf, wms,\n kml)\n ID: db43a358-273c-4c2e-8a5c-cc28eaaffaa7\n Name: freshwater-atlas-named-point-features\n\nAccess a single record by calling `bcdc_get_record(ID)` with the ID\n from the desired record.\n```\n:::\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-16_0824ca35b73e8aaf91ba0caf941c2337'}\n\n```{.r .cell-code}\n## LAKES ##\n\n# 1 Square Kilometer = 100.00 Hectare\n\n# Uses date filter which filters lakes\nlakes <- bcdc_query_geodata(\"cb1e3aba-d3fe-4de1-a2d4-b8b6650fb1f6\") |>\n  filter(INTERSECTS(scott_aoi)) |>\n  select(id, WATERBODY_TYPE, AREA_HA) |>\n  collect() |> \n  select(id, WATERBODY_TYPE, AREA_HA)\n\n# download wetlands\n\nwetlands <- bcdc_query_geodata(\"93b413d8-1840-4770-9629-641d74bd1cc6\") |>\n  filter(INTERSECTS(scott_aoi)) |>\n  select(id, WATERBODY_TYPE, AREA_HA) |>\n  filter(AREA_HA < 100) |>\n  collect() |> \n  select(id, WATERBODY_TYPE, AREA_HA)\n\nwater <- bind_rows(lakes, wetlands)\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-17_3864e41d5acac0ab1788dde3e586d978'}\n\n```{.r .cell-code}\nwrite_sf(wetlands, file.path(\"clean_data\", \"water.gpkg\"), append = FALSE)\n```\n:::\n\n\n## stream index\n\nWe can get the columns in a given dataset with `bcdc_describe_feature()`:\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-18_c4b2a68e108690d6ad72703896c11004'}\n\n```{.r .cell-code}\nstreams_cols <- bcdc_describe_feature(\"92344413-8035-4c08-b996-65a9b3f62fca\")\nprint(streams_cols, n = 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 28 × 5\n   col_name                sticky remote_col_type local_col_type column_comments\n   <chr>                   <lgl>  <chr>           <chr>          <chr>          \n 1 id                      TRUE   xsd:string      character       <NA>          \n 2 LINEAR_FEATURE_ID       TRUE   xsd:decimal     numeric        \"A unique nume…\n 3 WATERSHED_GROUP_ID      TRUE   xsd:decimal     numeric        \"An automatica…\n 4 EDGE_TYPE               TRUE   xsd:decimal     numeric        \"A 4 digit num…\n 5 BLUE_LINE_KEY           FALSE  xsd:decimal     numeric        \"Uniquely iden…\n 6 WATERSHED_KEY           FALSE  xsd:decimal     numeric        \"A key that id…\n 7 FWA_WATERSHED_CODE      FALSE  xsd:string      character      \"A 143 charact…\n 8 LOCAL_WATERSHED_CODE    FALSE  xsd:string      character      \"The 143 chara…\n 9 WATERSHED_GROUP_CODE    TRUE   xsd:string      character      \"The watershed…\n10 DOWNSTREAM_ROUTE_MEASU… FALSE  xsd:decimal     numeric        \"The distance,…\n11 LENGTH_METRE            TRUE   xsd:decimal     numeric        \"The length in…\n12 FEATURE_SOURCE          TRUE   xsd:string      character      \"The source of…\n13 GNIS_ID                 FALSE  xsd:decimal     numeric        \"The BCGNIS  (…\n14 GNIS_NAME               FALSE  xsd:string      character      \"The BCGNIS  (…\n15 LEFT_RIGHT_TRIBUTARY    FALSE  xsd:string      character      \"Describes whi…\n16 STREAM_ORDER            TRUE   xsd:decimal     numeric        \"The calculate…\n17 STREAM_MAGNITUDE        TRUE   xsd:decimal     numeric        \"The calculate…\n18 WATERBODY_KEY           FALSE  xsd:decimal     numeric        \"The waterbody…\n19 BLUE_LINE_KEY_50K       FALSE  xsd:decimal     numeric        \"The best matc…\n20 WATERSHED_CODE_50K      FALSE  xsd:string      character      \"The hierarchi…\n# ℹ 8 more rows\n```\n:::\n:::\n\n\nLet's use the `STREAM_ORDER` column to just get streams of order 3 and 4\nand still intersect with our AOI.\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-19_02648722fca24af6ad19354059a5320a'}\n\n```{.r .cell-code}\nstreams <- bcdc_query_geodata(\"92344413-8035-4c08-b996-65a9b3f62fca\") |>\n  filter(\n    INTERSECTS(scott_aoi), \n    STREAM_ORDER >= 3\n  ) |>\n  select(id, STREAM_ORDER) |>\n  collect() |> \n  select(id, STREAM_ORDER) |>\n  st_zm()\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-20_c000d0b010b972c91cca41a473039af0'}\n\n```{.r .cell-code}\nwrite_sf(streams, file.path(\"clean_data\", \"streams.gpkg\"), append = FALSE)\n```\n:::\n\n\n## roads\n\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-21_fc20ce1166f696972b654bc042b2f188'}\n\n```{.r .cell-code}\nroads <- bcdc_query_geodata(\"bb060417-b6e6-4548-b837-f9060d94743e\") |> \n  filter(INTERSECTS(scott_aoi))  |> \n  select(\"id\", \"ROAD_CLASS\", \"ROAD_SURFACE\") |> \n  collect() |> \n  select(ROAD_SURFACE, ROAD_CLASS) |> \n  st_intersection(scott_aoi) |> # clip roads so all inside aoi\n  st_cast(\"MULTILINESTRING\")\n```\n:::\n\n::: {.cell hash='05-vector-bcdata_cache/html/unnamed-chunk-22_3917132129c34916125ec710b49256f6'}\n\n```{.r .cell-code}\nwrite_sf(roads, file.path(\"clean_data\", \"roads.gpkg\"), append = FALSE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}